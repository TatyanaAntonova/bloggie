@page
@model Add

@{
}

<div class="bg-secondary bg-opacity-10 py-3 mb-5">
    <div class="container">
        <h1>Add blog post</h1>
    </div>
</div>

<div>
    <div class="container">
        <form method="post">
            <div class="mb-3">
                <label for="heading" class="form-label">Heading</label>
                <input type="text" class="form-control" id="heading" asp-for="AddBlogPostRequest.Heading">
            </div>

            <div class="mb-3">
                <label for="pageTitle" class="form-label">Page Title</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="AddBlogPostRequest.PageTitle">
            </div>

            <div class="mb-3">
                <label for="content" class="form-label">Content</label>
                <textarea class="form-control" id="content" asp-for="AddBlogPostRequest.Content"></textarea>
            </div>

            <div class="mb-3">
                <label for="shortDescription" class="form-label">Short Description</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="AddBlogPostRequest.ShortDescription">
            </div>

            <!-- Featured Image Upload Section -->
            <div class="mb-3">
                <label for="featuredImageUpload" class="form-label">Featured Image Upload </label>
                <!-- Hidden file input -->
                <input type="file" id="featuredImageUpload" asp-for="FeaturedImage" style="display: none;"/>

                <!-- Custom button styled with Bootstrap -->
                <button type="button" class="btn btn-secondary" id="customFileButton">Upload Image</button>
            </div>

            <!-- Capture Photo Section -->
            <div class="mb-3">
                <label class="form-label">Or Capture Photo</label>
                <button class="btn btn-secondary" type="button" id="capturePhotoButton">Capture Photo</button>
            </div>

            <!-- Camera Capture Display -->
            <div class="mb-3" id="cameraContainer" style="display: none;">
                <div class="camera-container">
                    <video id="video" autoplay></video>
                    <button class="btn btn-primary" type="button" id="captureButton">Capture</button>
                    <canvas id="canvas" style="display: none;"></canvas>
                    <div>
                        <img id="photo" alt="Captured Photo" style="display: none; width: 300px;"/>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="featureImageUrl" class="form-label">Featured Image Url</label>
                <input type="text" class="form-control" id="featureImageUrl" asp-for="AddBlogPostRequest.FeatureImageUrl">
                <!-- Display the uploaded image preview -->
                <img src="" id="featuredImageDisplay" style="display:none; width:300px; margin-top: 10px;"/>
            </div>

            <div class="mb-3">
                <label for="urlHandle" class="form-label">Url Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="AddBlogPostRequest.UrlHandle">
            </div>

            <div class="mb-3">
                <label for="publishDate" class="form-label">Publish Date</label>
                <input type="date" class="form-control" id="publishDate" asp-for="AddBlogPostRequest.PublishDate">
            </div>

            <div class="mb-3">
                <label for="author" class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="AddBlogPostRequest.Author">
            </div>

            <div class="form-check mb-3">
                <label for="isVisible" class="form-check-label">Is Visible</label>
                <input class="form-check-input" type="checkbox" id="isVisible" asp-for="AddBlogPostRequest.Visible">
            </div>

            <div class="mb-3">
                <button class="btn btn-primary" type="submit">Submit</button>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
    const featuredImageUploadElement = document.getElementById('featuredImageUpload');
    const customFileButton = document.getElementById('customFileButton');
    const featuredImageUrl = document.getElementById('featureImageUrl');
    const featuredImageDisplay = document.getElementById('featuredImageDisplay');
    
    var editor = new FroalaEditor('#content',{
        imageUploadURL: '/api/images'
    });
    
    // Trigger file input when custom button is clicked
    customFileButton.addEventListener('click', () => {
        featuredImageUploadElement.click();
    });

    // Upload image (file or captured) and update URL and display
    async function uploadFeaturedImage(imageData) {
        let data = new FormData();

        // Check if the image is a File or a Data URL (base64)
        if (imageData instanceof File) {
            data.append('file', imageData);  // for file upload
        } else {
            // Convert Data URL to Blob for captured image
            const blob = await fetch(imageData).then(res => res.blob());
            data.append('file', blob, 'captured_image.png');
        }

        try {
            const response = await fetch('/api/images', {
                method: 'POST',
                headers: { 'Accept': '*/*' },
                body: data
            });

            if (response.ok) {
                const result = await response.json();
                console.log("Upload result:", result); // Debugging

                if (result.link) {
                    featuredImageUrl.value = result.link;
                    featuredImageDisplay.src = result.link;
                    featuredImageDisplay.style.display = 'block';
                } else {
                    console.error("No link found in the response:", result);
                    alert("Image upload failed. Please try again.");
                }
            } else {
                console.error("Upload failed with status:", response.status);
                alert("Image upload failed. Please check your server.");
            }
        } catch (error) {
            console.error("Error during image upload:", error);
            alert("An error occurred during image upload. Please try again.");
        }
    }

    // Event listener for file upload
    featuredImageUploadElement.addEventListener('change', (e) => {
        uploadFeaturedImage(e.target.files[0]);
    });

    // Capture Photo Script
    const capturePhotoButton = document.getElementById('capturePhotoButton');
    const cameraContainer = document.getElementById('cameraContainer');
    const video = document.getElementById('video');
    const captureButton = document.getElementById('captureButton');
    const canvas = document.getElementById('canvas');
    const photo = document.getElementById('photo');

    capturePhotoButton.addEventListener('click', () => {
        cameraContainer.style.display = 'block';
        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(error => {
                console.error("Error accessing camera:", error);
                alert("Could not access the camera. Please check your permissions.");
            });
    });

    captureButton.addEventListener('click', async () => {
        const context = canvas.getContext('2d');
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        const imageDataURL = canvas.toDataURL('image/png');
        photo.src = imageDataURL;
        photo.style.display = 'block';

        // Upload captured image data URL
        await uploadFeaturedImage(imageDataURL);
    });
</script>
}