@page
@model Add

@{
}

<div class="bg-secondary bg-opacity-10 py-3 mb-5">
    <div class="container">
        <h1>Add blog post</h1>
    </div>
</div>

<div>
    <div class="container">
        <form method="post">
            <div class="mb-3">
                <label for="heading" class="form-label">Heading</label>
                <input type="text" class="form-control" id="heading" asp-for="AddBlogPostRequest.Heading">
            </div>

            <div class="mb-3">
                <label for="pageTitle" class="form-label">Page Title</label>
                <input type="text" class="form-control" id="pageTitle" asp-for="AddBlogPostRequest.PageTitle">
            </div>

            <div class="mb-3">
                <label for="content" class="form-label">Content</label>
                <textarea class="form-control" id="content" asp-for="AddBlogPostRequest.Content"></textarea>
            </div>

            <div class="mb-3">
                <label for="shortDescription" class="form-label">Short Description</label>
                <input type="text" class="form-control" id="shortDescription" asp-for="AddBlogPostRequest.ShortDescription">
            </div>

            <div class="mb-3">
                <label for="featuredImageUpload" class="form-label">Featured image upload</label>
                <input type="file" id="featuredImageUpload" asp-for="FeaturedImage"/>

                <img src="" id="featuredImageDisplay" style="display:none;width:300px;"/>
            </div>

            <div class="mb-3">
                <div class="camera-container">
                    <video id="video" autoplay></video>
                    <label for="captureButton" class="form-label">Capture photo</label>
                    <button class="btn" type="button" id="captureButton">
                        <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-camera" viewBox="0 0 16 16">
                            <path d="M15 12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V6a1 1 0 0 1 1-1h1.172a3 3 0 0 0 2.12-.879l.83-.828A1 1 0 0 1 6.827 3h2.344a1 1 0 0 1 .707.293l.828.828A3 3 0 0 0 12.828 5H14a1 1 0 0 1 1 1zM2 4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2h-1.172a2 2 0 0 1-1.414-.586l-.828-.828A2 2 0 0 0 9.172 2H6.828a2 2 0 0 0-1.414.586l-.828.828A2 2 0 0 1 3.172 4z"/>
                            <path d="M8 11a2.5 2.5 0 1 1 0-5 2.5 2.5 0 0 1 0 5m0 1a3.5 3.5 0 1 0 0-7 3.5 3.5 0 0 0 0 7M3 6.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0"/>
                        </svg>
                    </button>
                    <canvas id="canvas" style="display: none;"></canvas>
                    <div>
                        <img id="photo" alt="Captured Photo" style="display: none;"/>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label for="featureImageUrl" class="form-label">Featured Image Url</label>
                <input type="text" class="form-control" id="featureImageUrl" asp-for="AddBlogPostRequest.FeatureImageUrl">
            </div>

            <div class="mb-3">
                <label for="urlHandle" class="form-label">Url Handle</label>
                <input type="text" class="form-control" id="urlHandle" asp-for="AddBlogPostRequest.UrlHandle">
            </div>

            <div class="mb-3">
                <label for="publishDate" class="form-label">Publish Date</label>
                <input type="date" class="form-control" id="publishDate" asp-for="AddBlogPostRequest.PublishDate">
            </div>

            <div class="mb-3">
                <label for="author" class="form-label">Author</label>
                <input type="text" class="form-control" id="author" asp-for="AddBlogPostRequest.Author">
            </div>

            <div class="form-check mb-3">
                <label for="isVisible" class="form-check-label">Is Visible</label>
                <input class="form-check-input" type="checkbox" id="isVisible" asp-for="AddBlogPostRequest.Visible">
            </div>

            <div class="mb-3">
                <button class="btn btn-primary" type="submit">Submit</button>
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
        var editor = new FroalaEditor('#content',{
            imageUploadURL: '/api/images'
        });

        const featuredImageUploadElement = document.getElementById('featuredImageUpload');
        const featuredImageUrl = document.getElementById('featureImageUrl');
        const featuredImageDisplay = document.getElementById('featuredImageDisplay');
        
        async function uploadFeaturedImage(e) {
            console.log(e.target.files[0]);
            
            let data = new FormData();
            data.append('file', e.target.files[0]);
            
            await fetch('/api/images', {
                method: 'POST',
                headers: {
                   'Accept': '*/*',
                 },
                body: data
            }).then(response => response.json())
                .then(result => {
                    featuredImageUrl.value = result.link;
                    featuredImageDisplay.style.display = 'block';
                    featuredImageDisplay.src = result.link;            
                });
        }        
        
        featuredImageUploadElement.addEventListener('change', uploadFeaturedImage)
    </script>

    <script>
        const video = document.getElementById('video');
        const captureButton = document.getElementById('captureButton');
        const canvas = document.getElementById('canvas');
        const photo = document.getElementById('photo');

        navigator.mediaDevices.getUserMedia({ video: true })
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(error => {
                console.error("Error accessing camera:", error);
                alert("Could not access the camera. Please check your permissions.");
            });

        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            const imageDataURL = canvas.toDataURL('image/png');
            photo.src = imageDataURL;
            photo.style.display = 'block';
        });
    </script>
}